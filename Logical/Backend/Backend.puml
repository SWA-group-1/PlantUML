@startuml
'https://plantuml.com/class-diagram

class API<< (S,#FF7700) Singleton >>{
Attach*Handler()
}

class ConnectionBroker{
TryClaimConnection()
}

class EnemyType {
bool Camo
int Health
string Name
double Speed
string nextType
int SpriteNumber
}

class RoundSection {
string EnemyType
int Count
DeltaTime
}

class EnemyDefinitions{
EnemyType[] EnemyTypes
Parse()
}

class TowerType{
bool CanSpotCamo
string Description
int MediumCost
double ProjectileSpeed
int ProjectileSpriteNumber
double Range
double ReloadTime
int TowerSpriteNumber
int TypeNumber
}

class RoundDefinitions {
RoundSection[][] Rounds
}

class TowerDefinitions{
TowerType[] Towers
}

class StorageAPI{
DownloadEnemies()
DownloadTowers()
DownloadRounds()
}

class Router {
Register()
}

class Orchestrator {
OnClose()
}

interface LobbyObserver{
OnClose()
}

class Lobby{
long id
string Name
int PlayerCount
AddObserver()
Dispose()
}

class EcsContainer{
EcsWorld EcsWorld
bool HasPlayerDied
bool HasPlayerDied
bool Running
PlaceEnemySystem
PlaceTowerSystem
int Score
SellTowerSystem
UpdateClientSystem
Dispose()
ProcessFightRound()
}

class System{

}

class Stage{
int Number
string Name
int XSize
int YSize
Tile[] BlockedTiles
double PathLength
Point[] PathPoints
isBeforeStage()
isOnStage()
isValidTowerTile()
Parse()
}

class Point{
double X
double Y
double Distance()
double SquareDistance()
}

class Tile{
double X
double Y
}

class Broadcaster{
Dispose()
DisconnectClient()
TryAssociateWithConnection()
TryAssociateWithConnection()
Ping()
FightRound()
GameMode()
InputRound()
LobbyMode()
EndGame()
HealthUpdate()
MoneyUpdate()
PlayerCountUpdate()
TowerPosition()
TowerRemoved()
AnimationConfirmation()
BoardToPathAnimation()
PathToPathAnimation()
TowerAnimation()
HealthAnimation()
MoneyAnimation()
}

interface IReceiver{
JoinLobby()
LeaveLobby()
PlaceTower()
SellTower()
StartGame()
StartRound()
}

API <.. Orchestrator: Attach...Handler
API <.right. Router : Attach...Handler


ConnectionBroker <.. Broadcaster
ConnectionBroker --* Orchestrator

IReceiver <|-- Lobby

Router *-right- IReceiver
Router --* Orchestrator

Lobby *-- EcsContainer
Lobby *-- Broadcaster
Lobby --* Orchestrator

EcsContainer *-- Stage

EcsContainer *-- System

EnemyType "n" --* EnemyDefinitions : "EnemyTypes"
RoundSection "n" --* RoundDefinitions : "Rounds"
TowerType "n" --* TowerDefinitions : "Towers"

Lobby ..> TowerDefinitions
Lobby ..> RoundDefinitions
Lobby ..> EnemyDefinitions

Lobby ..> Broadcaster
System ..> Broadcaster

StorageAPI <.up. TowerDefinitions : DownloadTowers
StorageAPI <.up. RoundDefinitions : DownloadRounds
StorageAPI <.up. EnemyDefinitions : DownloadEnemies

Stage *-- Point
Stage *-- Tile

Lobby *-- LobbyObserver
LobbyObserver <|-up- Orchestrator

@enduml